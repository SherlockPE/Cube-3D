/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   start_grafics.c                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: flopez-r <flopez-r@student.42madrid.com    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/07/03 14:44:53 by flopez-r          #+#    #+#             */
/*   Updated: 2024/07/11 15:22:13 by flopez-r         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include <cube3d.h>


// -----------------------------------------------------------------------------
// Codam Coding College, Amsterdam @ 2022-2023 by W2Wizard.
// See README in the root project for more information.
// -----------------------------------------------------------------------------

#define WIDTH 512
#define HEIGHT 512
/* 
void ft_hook(void* param)
{
	t_game	*data = (t_game *)param;
	mlx_t* mlx = data->display.mlx;
	
	if (mlx_is_key_down(mlx, MLX_KEY_ESCAPE))
	{
		printf("Hola\n");
		free_scene_info(&data->file);
		mlx_close_window(mlx);
	}
	if (mlx_is_key_down(mlx, MLX_KEY_UP) || mlx_is_key_down(mlx, MLX_KEY_W))
		image->instances[0].y -= 5;
	if (mlx_is_key_down(mlx, MLX_KEY_DOWN) || mlx_is_key_down(mlx, MLX_KEY_S))
		image->instances[0].y += 5;
	if (mlx_is_key_down(mlx, MLX_KEY_LEFT) || mlx_is_key_down(mlx, MLX_KEY_A))
		image->instances[0].x -= 5;
	if (mlx_is_key_down(mlx, MLX_KEY_RIGHT) || mlx_is_key_down(mlx, MLX_KEY_D))
		image->instances[0].x += 5;
}
 */

void	fill_image(mlx_image_t *img, uint32_t R, uint32_t G, uint32_t B)
{
	uint32_t	i;
	uint32_t	j;

	i = 0;
	while (i < img->width)
	{
		j = 0;
		while (j < img->height)
		{
			mlx_put_pixel(img, i, j, R << 24 | G << 16 | B << 8);
			j++;
		}
		i++;
	}
}

void manage_keys(mlx_key_data_t keydata, void* param)
{
	(void)param;
	printf("Key %d pressed\n", keydata.os_key);
}

int start_grafics(t_game *data)
{
	t_display walls;

	data->display.mlx = mlx_init(WIDTH, HEIGHT, "Cube 3D", true);
	if (!data->display.mlx)
		return(exit_msg(mlx_strerror(mlx_errno), EXIT_FAILURE));

	walls.frames[0] = mlx_new_image(data->display.mlx, 64, 64);
	if (!walls.frames[0])
	{
		mlx_close_window(data->display.mlx);
		return(exit_msg(mlx_strerror(mlx_errno), EXIT_FAILURE));
	}
	fill_image(walls.frames[0], (uint32_t)0xFFFFFF, (uint32_t)0xFFFFFF, (uint32_t)0xFFFFFF);
	if (mlx_image_to_window(data->display.mlx, walls.frames[0], 0, 0) == -1)
	{
		mlx_close_window(data->display.mlx);
		return(exit_msg(mlx_strerror(mlx_errno), EXIT_FAILURE));
	}
	mlx_key_hook(data->display.mlx, manage_keys, NULL);
	mlx_loop(data->display.mlx);
	mlx_terminate(data->display.mlx);
	return (EXIT_SUCCESS);
}



// int start_grafics(t_game *data)
// {
// 	// mlx_get_monitor_size(0, &data->display.width, &data->display.height);
// 	// mlx_set_setting(MLX_FULLSCREEN, true);
// 	// data->display.mlx = mlx_init(data->display.width, data->display.height,
// 	// 	"cube3d", false);
// 	data->display.mlx = mlx_init(800, 600, "cube3d", false);
// 	if (!data->display.mlx)
// 		return (exit_msg(mlx_strerror(mlx_errno), EXIT_FAILURE));
// 	mlx_loop(data->display.mlx);
// 	mlx_terminate(data->display.mlx);
// 	return (EXIT_SUCCESS);
// }
